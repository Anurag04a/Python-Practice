# -*- coding: utf-8 -*-
"""Python Practice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AYP1PMME4stRo5vPGMqA2vWTY-340V74

#Date: 11oct.2023

##**Section-1: Working With Variables**

###1.Printing Hello World
"""

print("Hello World")

"""###2.Print
Write a program in main.py that prints some notes on Python programming into the Output console.

Warning: The output in your program should match the example output shown below exactly, character for character, even spaces and symbols should be identical, otherwise the tests won't pass.

Example Output
After you have written your code, you should run your program and it should print the following:

Day 1 - Python Print Function

The function is declared like this:

print('what to print')
"""

print("Day 1 - Python Print Function")
print("The function is declared like this:")
print("print('what to print')")

"""###3.Output
When you run your program, it should print the following:

Day 1 - String Manipulation

String Concatenation is done with the "+" sign.

e.g. print("Hello " + "world")

New lines can be created with a backslash and n.
"""

print("Day 1 - String Manipulation")
print('String Concatenation is done with the "+" sign.')
print('e.g. print("Hello " + "world")')
print("New lines can be created with a backslash and n.")

"""###4.Taking from user

Write a program that prints the number of characters in a name.
"""

length = len(input())
print(length)

"""###5.Variable
This program takes two inputs. The first input is stored in a variable called a. The second input is stored in a variable called b.

Write a program that switches the values stored in the variables a and b.
"""

# There are two variables, a and b from input
a = input()
b = input()
# 🚨 Don't change the code above ☝️
####################################
# Write your code below this line 👇

temp = a
a = b
b = temp


# Write your code above this line ☝️
print("a: " + a)
print("b: " + b)

"""###6.Create a greeting for your program."""

print("Welcome to DevOps Training.")

"""###7.Practice
Ask the user for the city that they grew up in.

Ask the user for the name of a pet.

Combine the name of their city and pet and show them their band name.

Make sure the input cursor shows on a new line:
"""

street = input("What's the name of the city you grew up in?\n")
pet = input("What's your pet's name?\n")
print("Your band name could be " + street + " " + pet)

"""##**Section-2: Data types and String manipulation**

String

Numeric Types:	int, float, complex

list, tuple, Dictionary

Boolean Type:	bool

###8.Problem
Write a program that adds the digits in a 2 digit number. e.g. if the input was 35, then the output should be 3 + 5 = 8
"""

two_digit_number = input()
# 🚨 Don't change the code above 👆
####################################
# Write your code below this line 👇
num1 = int(two_digit_number[0])
num2 = int(two_digit_number[1])
sum = num1 + num2
print(sum)

"""###9.Problem

Write a program that calculates the Body Mass Index (BMI) from a user's weight and height.
"""

# 1st input: enter height in meters e.g: 1.65
height = input()
# 2nd input: enter weight in kilograms e.g: 72
weight = input()
# 🚨 Don't change the code above 👆

# Write your code below this line 👇
w = int(weight)
h = float(height)
bmi = w/(h**2)
print(int(bmi))

"""###10.Problem

Create a program using maths and f-Strings that tells us how many weeks we have left, if we live until 90 years old.
"""

age = input()
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
age = int(age)
left_age = 90-age
left_week = left_age*52
print(f"You have {left_week} weeks left.")

"""###11.Problem

If the bill was $150.00, split between 5 people, with 12% tip.

Each person should pay (150.00 / 5) * 1.12 = 33.6
Format the result to 2 decimal places = 33.60

Tip: There are 2 ways to round a number. You might have to do some Googling to solve this.💪

Write your code below this line 👇
"""

print("Welcome to the tip calculator!")
bill = float(input("What was the total bill? $"))
tip = int(input("How much tip would you like to give? 10, 12, or 15? "))
people = int(input("How many people to split the bill?"))

tip_as_percent = tip / 100
total_tip_amount = bill * tip_as_percent
total_bill = bill + total_tip_amount
bill_per_person = total_bill / people
final_amount = round(bill_per_person, 2)
print(f"Each person should pay: ${final_amount}")

"""##Section-3: Control Flow and Logical Operator

###12.Problem

Write a program that works out whether if a given number is an odd or even number.
"""

# Which number do you want to check?
number = int(input())
# 🚨 Don't change the code above 👆

# Write your code below this line 👇
if number%2==0:
  print("This is an even number.")
else:
  print("This is an odd number.")

"""###13.Problem

Write a program that interprets the Body Mass Index (BMI) based on a user's weight and height.

It should tell them the interpretation of their BMI based on the BMI value.

Under 18.5 they are underweight

Over 18.5 but below 25 they have a normal weight

Equal to or over 25 but below 30 they are slightly overweight

Equal to or over 30 but below 35 they are obese

Equal to or over 35 they are clinically obese.
"""

# Enter your height in meters e.g., 1.55
height = float(input())
# Enter your weight in kilograms e.g., 72
weight = int(input())
# 🚨 Don't change the code above 👆

#Write your code below this line 👇
bmi = weight/(height**2)
if bmi<18.5:
  print(f"Your BMI is {bmi}, you are underweight.")
elif 18.5<=bmi and bmi<25:
  print(f"Your BMI is {bmi}, you have a normal weight.")
elif 25<=bmi and bmi<30:
  print(f"Your BMI is {bmi}, you are slightly overweight.")
elif bmi>=30 and bmi<35:
  print(f"Your BMI is {bmi}, you are obese.")
else:
  print(f"Your BMI is {bmi}, you are clinically obese.")

"""###14.Problem

Write a program that works out whether if a given year is a leap year. A normal year has 365 days, leap years have 366, with an extra day in February.
"""

# Which year do you want to check?
year = int(input())
# 🚨 Don't change the code above 👆

# Write your code below this line 👇
if year%4==0:
  if year%100==0:
    if year%400==0:
      print("Leap year")
    else:
      print("Not leap year")
  else:
    print("Leap year")
else:
  print("Not leap year")

"""###15.Problem

Congratulations, you've got a job at Python Pizza! Your first job is to build an automatic pizza order program.

Based on a user's order, work out their final bill.

Small pizza (S): $15

Medium pizza (M): $20

Large pizza (L): $25


Add pepperoni for small pizza (Y or N): +$2

Add pepperoni for medium or large pizza (Y or N): +$3

Add extra cheese for any size pizza (Y or N): +$1

Example Input

L

Y

N

Example Output

Thank you for choosing Python Pizza Deliveries!
Your final bill is: $28.
"""

print("Thank you for choosing Python Pizza Deliveries!")
size = input() # What size pizza do you want? S, M, or L
add_pepperoni = input() # Do you want pepperoni? Y or N
extra_cheese = input() # Do you want extra cheese? Y or N
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
if size == "L":
  if add_pepperoni == "Y":
    if extra_cheese == "Y":
      sum = 25+3+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 25+3
      print(f"Your final bill is: ${sum}.")
  else:
    if extra_cheese == "Y":
      sum = 25+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 25
      print(f"Your final bill is: ${sum}.")

elif size == "M":
  if add_pepperoni == "Y":
    if extra_cheese == "Y":
      sum = 20+3+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 20+3
      print(f"Your final bill is: ${sum}.")
  else:
    if extra_cheese == "Y":
      sum = 20+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 20
      print(f"Your final bill is: ${sum}.")

elif size == "S":
  if add_pepperoni == "Y":
    if extra_cheese == "Y":
      sum = 15+2+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 15+2
      print(f"Your final bill is: ${sum}.")
  else:
    if extra_cheese == "Y":
      sum = 15+1
      print(f"Your final bill is: ${sum}.")
    else:
      sum = 15
      print(f"Your final bill is: ${sum}.")

"""###16.Problem

💪 This is a difficult challenge! 💪
You are going to write a program that tests the compatibility between two people.

To work out the love score between two people:

Take both people's names and check for the number of times the letters in the word TRUE occurs.

Then check for the number of times the letters in the word LOVE occurs.

Then combine these numbers to make a 2 digit number.

For Love Scores less than 10 or greater than 90, the message should be:

"Your score is *x*, you go together like coke and mentos."
For Love Scores between 40 and 50, the message should be:

"Your score is *y*, you are alright together."
Otherwise, the message will just be their score. e.g.:

"Your score is *z*."
e.g.

name1 = "Angela Yu"
name2 = "Jack Bauer"
T occurs 0 times

R occurs 1 time

U occurs 2 times

E occurs 2 times

Total = 5

L occurs 1 time

O occurs 0 times

V occurs 0 times

E occurs 2 times

Total = 3

Love Score = 53

Print: "Your score is 53."

Example Input 1

Kanye West

Kim Kardashian

Example Output 1

The Love Calculator is calculating your score...

Your score is 42, you are alright together.

Example Input 2

Brad Pitt

Jennifer Aniston

Example Output 2

The Love Calculator is calculating your score...
Your score is 73.
"""

print("The Love Calculator is calculating your score...")
name1 = input() # What is your name?
name2 = input() # What is their name?
# 🚨 Don't change the code above 👆
# Write your code below this line 👇
name1 = name1.upper()
name2 = name2.upper()
score1=name1.count("T")+name1.count("R")+name1.count("U")+name1.count("E")+name2.count("T")+name2.count("R")+name2.count("U")+name2.count("E")
score2=name2.count("L")+name2.count("O")+name2.count("V")+name2.count("E")+name1.count("L")+name1.count("O")+name1.count("V")+name1.count("E")

score = int(str(score1)+str(score2))
if score<=10 or score>=90:
  print(f"Your score is {score}, you go together like coke and mentos.")
elif 40<=score<=50:
  print(f"Your score is {score}, you are alright together.")
else:
  print(f"Your score is {score}.")

"""#Date: 13oct.2023

##**Section-4: List**

###17.Problem

You are going to write a virtual coin toss program. It will randomly tell the user "Heads" or "Tails".
"""

import random
num = random.randint(0,1)
if num==1:
  print("Heads")
else:
  print("Tails")

"""###18.Problem

You are going to write a program that will select a random name from a list of names. The person selected will have to pay for everybody's food bill.
"""

names_string = input()
names = names_string.split(", ")
# The code above converts the input into an array seperating
#each name in the input by a comma and space.
# 🚨 Don't change the code above 👆
import random
n = len(names)
num = random.randint(0,n-1)
print(names[num]+" is going to buy the meal today!")

"""###19.Problem

This is a difficult challenge. 💪

You are going to write a program that will mark a spot on a map with an X.

In the starting code, you will find a variable called map.

This map contains a nested list. When map is printed this is what it looks like, notice the nesting:

[['⬜️', '⬜️', '⬜️'],['⬜️', '⬜️', '⬜️'],['⬜️', '⬜️', '⬜️']]

This is a bit hard to work with. So on lines 6 and 23, we've used this line of code print(f"{row1}\n{row2}\n{row3}") to format the 3 lists to be printed as a 3 by 3 grid, each on a new line.

['⬜️', '⬜️', '⬜️']

['⬜️', '⬜️', '⬜️']

['⬜️', '⬜️', '⬜️']

Now it looks a bit more like the coordinates of a real map:

**Map Coordinates Example**

Your job is to write a program that allows you to mark a square on the map using a letter-number system.

**List coordinates**

So an input of A3 should place an X at the position shown below:

Exmaple location

First, your program must take the user input and convert it to a usable format.

Next, you need to use that input to update your nested list with an "X". Remember that your nested list map actually looks like this:

[['⬜️', '⬜️', '⬜️'],['⬜️', '⬜️', '⬜️'],['⬜️', '⬜️', '⬜️']]

Example Input 1

B3

Example Output 1

Hiding your treasure! X marks the spot.
['⬜️', '️⬜️', '️⬜️']

['⬜️', '⬜️', '️⬜️']

['⬜️️', 'X', '⬜️️']

Example Input 2
B1
Example Output 2
Hiding your treasure! X marks the spot.

['⬜️', 'X', '️⬜️']

['⬜️', '⬜️', '️⬜️']

['⬜️️', '⬜️️', '⬜️️']

Remember that nested Lists in Python are accessed from outside to inside. e.g. In the List below:

list = [['A', 'B, 'C'], 'E', 'F', 'G']

E is list[1] C is list[0][2]

Check your formatting. This is correctly formatted:

['⬜️', '⬜️', '⬜️']

['⬜️', '⬜️', '⬜️']

['⬜️', 'X', '⬜️']

vs.

Incorrectly formatted (missing a space before 'X and extra space after the X and extra space before the comma):

['⬜️', '⬜️', '⬜️']

['⬜️', '⬜️', '⬜️']

['⬜️','X ' , '⬜️']
"""

line1 = ["⬜️","️⬜️","️⬜️"]
line2 = ["⬜️","⬜️","️⬜️"]
line3 = ["⬜️️","⬜️️","⬜️️"]
map = [line1, line2, line3]
print("Hiding your treasure! X marks the spot.")
position = input() # Where do you want to put the treasure?
# 🚨 Don't change the code above 👆
# Write your code below this row 👇
a= position[0]
b = int(position[1])
if a=="A":
  a=0
  map[b-1][a]="X"
elif a =="B":
  a=1
  map[b-1][a]="X"
else:
  a=2
  map[b-1][a]="X"

# Write your code above this row 👆
# 🚨 Don't change the code below 👇
print(f"{line1}\n{line2}\n{line3}")

"""###20.Problem. Rock Paper scissors"""

import random

rock = '''
    _______
---'   ____)
      (_____)
      (_____)
      (____)
---.__(___)
'''

paper = '''
    _______
---'   ____)____
          ______)
          _______)
         _______)
---.__________)
'''

scissors = '''
    _______
---'   ____)____
          ______)
       __________)
      (____)
---.__(___)
'''

game_images = [rock, paper, scissors]

user_choice = int(input("What do you choose? Type 0 for Rock, 1 for Paper or 2 for Scissors.\n"))
print(game_images[user_choice])

computer_choice = random.randint(0, 2)
print("Computer chose:")
print(game_images[computer_choice])

if user_choice >= 3 or user_choice < 0:
  print("You typed an invalid number, you lose!")
elif user_choice == 0 and computer_choice == 2:
  print("You win!")
elif computer_choice == 0 and user_choice == 2:
  print("You lose")
elif computer_choice > user_choice:
  print("You lose")
elif user_choice > computer_choice:
  print("You win!")
elif computer_choice == user_choice:
  print("It's a draw")

"""##**Section-5: Loops**

###21.Problem

You are going to write a program that calculates the average student height from a List of heights
"""

# Input a Python list of student heights
student_heights = input().split()
for n in range(0, len(student_heights)):
  student_heights[n] = int(student_heights[n])
# 🚨 Don't change the code above 👆

# Write your code below this row 👇
sum = 0
for height in student_heights:
  sum = sum + height

print(f"total height = {sum}")
print(f"number of students = {len(student_heights)}")
avg = int(round(sum/len(student_heights),0))
print(f"average height = {avg}")

"""###22.Problem

You are going to write a program that calculates the highest score from a List of scores.

e.g. student_scores = [78, 65, 89, 86, 55, 91, 64, 89]

Important you are not allowed to use the max or min functions. The output words must match the example. i.e

The highest score in the class is: x
"""

# Input a list of student scores
student_scores = input().split()
for n in range(0, len(student_scores)):
  student_scores[n] = int(student_scores[n])

# Write your code below this row 👇
highest = student_scores[0]
for h in student_scores:
  if h > highest:
    highest = h

print(f"The highest score in the class is: {highest}")

"""###23.Problem

You are going to write a program that calculates the sum of all the even numbers from 1 to X. If X is 100 then the first even number would be 2 and the last one is 100:
"""

target = int(input()) # Enter a number between 0 and 1000
# 🚨 Do not change the code above ☝️

# Write your code here 👇
sum = 0
for i in range(0,target+1,2):
  sum = sum +i
print(sum)

"""###24.Problem

You are going to write a program that automatically prints the solution to the FizzBuzz game. These are the rules of the FizzBuzz game:

Your program should print each number from 1 to 100 in turn and include number 100.

When the number is divisible by 3 then instead of printing the number it should print "Fizz".

When the number is divisible by 5, then instead of printing the number it should print "Buzz".`

And if the number is divisible by both 3 and 5 e.g. 15 then instead of the number it should print "FizzBuzz"

e.g. it might start off like this:

1

2

Fizz

4

Buzz

Fizz

7

8

Fizz

Buzz

11

Fizz

13

14

FizzBuzz

...etc
"""

# Write your code here 👇
num = 100
for i in range(1,101):
  if i%3==0:
    if i%5==0:
      print("FizzBuzz")
    else:
      print("Fizz")
  elif i%5==0:
    print("Buzz")
  else:
    print(i)

"""###25.Problem: Password Generator"""

#Password Generator Project
import random
letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']
numbers = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
symbols = ['!', '#', '$', '%', '&', '(', ')', '*', '+']

print("Welcome to the PyPassword Generator!")
nr_letters = int(input("How many letters would you like in your password?\n"))
nr_symbols = int(input(f"How many symbols would you like?\n"))
nr_numbers = int(input(f"How many numbers would you like?\n"))

password_list = []

for char in range(1, nr_letters + 1):
  password_list.append(random.choice(letters))

for char in range(1, nr_symbols + 1):
  password_list += random.choice(symbols)

for char in range(1, nr_numbers + 1):
  password_list += random.choice(numbers)

print(password_list)
random.shuffle(password_list)
print(password_list)

password = ""
for char in password_list:
  password += char

print(f"Your password is: {password}")

"""#**Date: 14oct.2023**

##**Section-6-8: Function & Loops**

###26.Problem

You are painting a wall. The instructions on the paint can says that 1 can of paint can cover 5 square meters of wall. Given a random height and width of wall, calculate how many cans of paint you'll need to buy.

**number of cans = (wall height x wall width) ÷ coverage per can.**

e.g. Height = 2, Width = 4, Coverage = 5

**number of cans = (2 \* 4) / 5 = 1.6**

But because you can't buy 0.6 of a can of paint, the result should be rounded up to 2 cans.

Example Input

3

9

**Example Output:**

You'll need 6 cans of paint.
"""

# Write your code below this line 👇
import math
def paint_calc(height, width,cover):
  cans = math.ceil((height*width)/cover)
  print(f"You'll need {cans} cans of paint.")



# Write your code above this line 👆
# Define a function called paint_calc() so the code below works.

# 🚨 Don't change the code below 👇
test_h = int(input()) # Height of wall (m)
test_w = int(input()) # Width of wall (m)
coverage = 5
paint_calc(height=test_h, width=test_w, cover=coverage)

"""###27.Problem

You need to write a function that checks whether if the number passed into it is a prime number or not.
"""

# Write your code below this line 👇
def prime_checker(number):
  if n<2:
    print("It's not a prime number.")
  else:
    for i in range(2,n//2):
      if n%i==0:
        print("It's not a prime number.")
        break
    else:
      print("It's a prime number.")



# Write your code above this line 👆

#Do NOT change any of the code below👇
n = int(input()) # Check this number
prime_checker(number=n)

"""##**Section-9: Dictonaries**

###28.Problem

You have access to a database of student_scores in the format of a dictionary. The keys in student_scores are the names of the students and the values are their exam scores.

Write a program that converts their scores to grades. By the end of your program, you should have a new dictionary called student_grades that should contain student names for keys and their grades for values.

The final version of the student_grades dictionary will be checked.

DO NOT modify lines 1-7 to change the existing student_scores dictionary.

DO NOT write any print statements.

This is the scoring criteria:

Scores 91 - 100: Grade = "Outstanding"

Scores 81 - 90: Grade = "Exceeds Expectations"

Scores 71 - 80: Grade = "Acceptable"

Scores 70 or lower: Grade = "Fail"

Expected Output

**{'Harry': 'Exceeds Expectations', 'Ron': 'Acceptable', 'Hermione': 'Outstanding', 'Draco': 'Acceptable', 'Neville': 'Fail'}**
"""

student_scores = {
  "Harry": 81,
  "Ron": 78,
  "Hermione": 99,
  "Draco": 74,
  "Neville": 62,
}
# 🚨 Don't change the code above 👆
# TODO-1: Create an empty dictionary called student_grades.
student_grade={}

# TODO-2: Write your code below to add the grades to student_grades.👇
for student in student_scores:
  if student_scores[student] <= 70:
    student_grade[student] = "Fail"
  elif student_scores[student] <= 80:
    student_grade[student] = "Acceptable"
  elif student_scores[student] <= 90:
    student_grade[student] = "Exceeds Expectations"
  else:
    student_grade[student] = "Outstanding"

# 🚨 Don't change the code below 👇
print(student_grade)

"""###28.Problem

You are going to write a program that adds to a travel_log. You can see a travel_log which is a List that contains 2 Dictionaries. Your job is to create a function that can add new countries to this list.

Write a function that will work with the following line of code on line 21 to add the entry for Brazil to the travel_log.

**add_new_country("Brazil", 5, ["Sao Paulo", "Rio de Janeiro"])**

DO NOT modify the travel_log directly. The goal is to create a function that modifies it.

Example Input

Brazil

5

["Sao Paulo", "Rio de Janeiro"]

Example Output

I've been to Brazil 5 times.

My favourite city was Sao Paulo.
"""

country = input() # Add country name
visits = int(input()) # Number of visits
list_of_cities = eval(input()) # create list from formatted string

travel_log = [
  {
    "country": "France",
    "visits": 12,
    "cities": ["Paris", "Lille", "Dijon"]
  },
  {
    "country": "Germany",
    "visits": 5,
    "cities": ["Berlin", "Hamburg", "Stuttgart"]
  },
]
# Do NOT change the code above 👆

# TODO: Write the function that will allow new countries
# to be added to the travel_log.
def add_new_country(country, visits, list_of_cities):
  dict={"country":country,
    "visits": visits,
    "cities": list_of_cities}
  travel_log.append(dict)

# Do not change the code below 👇
add_new_country(country, visits, list_of_cities)
print(f"I've been to {travel_log[2]['country']} {travel_log[2]['visits']} times.")
print(f"My favourite city was {travel_log[2]['cities'][0]}.")

"""##**Section-10: Function & outputs**

###24.Problem

days_in_month()

which will take a year and a month as inputs, e.g.

days_in_month(year=2022, month=2)

And it will use this information to work out if the year is a leap year and decide the number of days in the month, then return that as the output,

e.g.:

28
"""

def is_leap(year):
  if year % 4 == 0:
    if year % 100 == 0:
      if year % 400 == 0:
        return True
      else:
        return False
    else:
      return True
  else:
    return False

# TODO: Add more code here 👇
def days_in_month(year, month):
  month_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
  if is_leap(year):
    month_days[1]=29
    return month_days[month-1]
  return month_days[month-1]


#🚨 Do NOT change any of the code below
year = int(input()) # Enter a year
month = int(input()) # Enter a month
days = days_in_month(year, month)
print(days)

"""###25.Problem Calculator Project"""

def add(n1, n2):
  return n1 + n2

def subtract(n1, n2):
  return n1 - n2

def multiply(n1, n2):
  return n1 * n2

def divide(n1, n2):
  return n1 / n2

operations = {
  "+": add,
  "-": subtract,
  "*": multiply,
  "/": divide
}

def calculator():

  num1 = float(input("What's the first number?: "))
  for symbol in operations:
    print(symbol)
  should_continue = True

  while should_continue:
    operation_symbol = input("Pick an operation: ")
    num2 = float(input("What's the next number?: "))
    calculation_function = operations[operation_symbol]
    answer = calculation_function(num1, num2)
    print(f"{num1} {operation_symbol} {num2} = {answer}")

    a = input(f"Type 'y' to continue calculating with {answer}, or type 'n' to start a new calculation: ,or type any other key to stop calculation: ")
    if a == 'y':
      num1 = answer
    elif a== 'n':
      should_continue = False
      calculator()
    else:
      print("Thank you")
      should_continue = False
calculator()

"""#**Date: 16oct.2023**

##**Section-11: Blackjack Capstone Project**

###26.Problem
"""

#Hint 1: Go to this website and try out the Blackjack game:
#   https://games.washingtonpost.com/games/blackjack/
#Then try out the completed Blackjack project here:
#   http://blackjack-final.appbrewery.repl.run

#Hint 2: Read this breakdown of program requirements:
#   http://listmoz.com/view/6h34DJpvJBFVRlZfJvxF
#Then try to create your own flowchart for the program.

#Hint 3: Download and read this flow chart I've created:
#   https://drive.google.com/uc?export=download&id=1rDkiHCrhaf9eX7u7yjM1qwSuyEk-rPnt

#Hint 4: Create a deal_card() function that uses the List below to *return* a random card.
#11 is the Ace.
import random

def deal_card():
  """Returns a random card from the deck."""
  cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
  card = random.choice(cards)
  return card

#Hint 6: Create a function called calculate_score() that takes a List of cards as input
#and returns the score.
#Look up the sum() function to help you do this.
def calculate_score(cards):
  """Take a list of cards and return the score calculated from the cards"""

  #Hint 7: Inside calculate_score() check for a blackjack (a hand with only 2 cards: ace + 10) and return 0 instead of the actual score. 0 will represent a blackjack in our game.
  if sum(cards) == 21 and len(cards) == 2:
    return 0
  #Hint 8: Inside calculate_score() check for an 11 (ace). If the score is already over 21, remove the 11 and replace it with a 1. You might need to look up append() and remove().
  if 11 in cards and sum(cards) > 21:
    cards.remove(11)
    cards.append(1)
  return sum(cards)

#Hint 13: Create a function called compare() and pass in the user_score and computer_score. If the computer and user both have the same score, then it's a draw. If the computer has a blackjack (0), then the user loses. If the user has a blackjack (0), then the user wins. If the user_score is over 21, then the user loses. If the computer_score is over 21, then the computer loses. If none of the above, then the player with the highest score wins.
def compare(user_score, computer_score):
  #Bug fix. If you and the computer are both over, you lose.
  if user_score > 21 and computer_score > 21:
    return "You went over. You lose 😤"


  if user_score == computer_score:
    return "Draw 🙃"
  elif computer_score == 0:
    return "Lose, opponent has Blackjack 😱"
  elif user_score == 0:
    return "Win with a Blackjack 😎"
  elif user_score > 21:
    return "You went over. You lose 😭"
  elif computer_score > 21:
    return "Opponent went over. You win 😁"
  elif user_score > computer_score:
    return "You win 😃"
  else:
    return "You lose 😤"

def play_game():



  #Hint 5: Deal the user and computer 2 cards each using deal_card()
  user_cards = []
  computer_cards = []
  is_game_over = False

  for _ in range(2):
    user_cards.append(deal_card())
    computer_cards.append(deal_card())

  #Hint 11: The score will need to be rechecked with every new card drawn and the checks in Hint 9 need to be repeated until the game ends.

  while not is_game_over:
    #Hint 9: Call calculate_score(). If the computer or the user has a blackjack (0) or if the user's score is over 21, then the game ends.
    user_score = calculate_score(user_cards)
    computer_score = calculate_score(computer_cards)
    print(f"   Your cards: {user_cards}, current score: {user_score}")
    print(f"   Computer's first card: {computer_cards[0]}")

    if user_score == 0 or computer_score == 0 or user_score > 21:
      is_game_over = True
    else:
      #Hint 10: If the game has not ended, ask the user if they want to draw another card. If yes, then use the deal_card() function to add another card to the user_cards List. If no, then the game has ended.
      user_should_deal = input("Type 'y' to get another card, type 'n' to pass: ")
      if user_should_deal == "y":
        user_cards.append(deal_card())
      else:
        is_game_over = True

  #Hint 12: Once the user is done, it's time to let the computer play. The computer should keep drawing cards as long as it has a score less than 17.
  while computer_score != 0 and computer_score < 17:
    computer_cards.append(deal_card())
    computer_score = calculate_score(computer_cards)

  print(f"   Your final hand: {user_cards}, final score: {user_score}")
  print(f"   Computer's final hand: {computer_cards}, final score: {computer_score}")
  print(compare(user_score, computer_score))

#Hint 14: Ask the user if they want to restart the game. If they answer yes, clear the console and start a new game of blackjack and show the logo from art.py.
while input("Do you want to play a game of Blackjack? Type 'y' or 'n': ") == "y":

  play_game()

"""##**Section-12: Number Guessing Game**

###27.Problem
"""

import random
EASY_LEVEL_TURNS = 10
HARD_LEVEL_TURNS = 5


def check_answer(guess, answer, turns):
  """checks answer against guess. Returns the number of turns remaining."""
  if guess > answer:
    print("Too high.")
    return turns - 1
  elif guess < answer:
    print("Too low.")
    return turns - 1
  else:
    print(f"You got it! The answer was {answer}.")


def set_difficulty():
  level = input("Choose a difficulty. Type 'easy' or 'hard': ")
  if level == "easy":
    return EASY_LEVEL_TURNS
  else:
    return HARD_LEVEL_TURNS

def game():


  print("Welcome to the Number Guessing Game!")
  print("I'm thinking of a number between 1 and 100.")
  answer = random.randint(1, 100)
 # print(f"Pssst, the correct answer is {answer}")

  turns = set_difficulty()

  guess = 0
  while guess != answer:
    print(f"You have {turns} attempts remaining to guess the number.")


    guess = int(input("Make a guess: "))


    turns = check_answer(guess, answer, turns)
    if turns == 0:
      print("You've run out of guesses, you lose.")
      print(f"Pssst, the correct answer is {answer}")

      return
    elif guess != answer:
      print("Guess again.")


game()

"""#**Date: 17oct.2023**

##**Section:13- Debugging**

###28.Problem
"""

number = int(input()) # Which number do you want to check?

if number % 2 == 0:
  print("This is an even number.")
else:
  print("This is an odd number.")

"""###29.Problem"""

# Which year do you want to check?
year = input()
year = int(year)
if year % 4 == 0:
  if year % 100 == 0:
    if year % 400 == 0:
      print("Leap year.")
    else:
      print("Not leap year.")
  else:
    print("Leap year.")
else:
  print("Not leap year.")

"""###30.Problem"""

target = int(input())
for number in range(1, target + 1):
  if number % 3 == 0 and number % 5 == 0:
    print("FizzBuzz")
  elif number % 3 == 0:
    print("Fizz")
  elif number % 5 == 0:
    print("Buzz")
  else:
    print(number)

"""##Section:18 Higher Lower Game

###31.Problem
"""

data = [
    {
        'name': 'Instagram',
        'follower_count': 346,
        'description': 'Social media platform',
        'country': 'United States'
    },
    {
        'name': 'Cristiano Ronaldo',
        'follower_count': 215,
        'description': 'Footballer',
        'country': 'Portugal'
    },
    {
        'name': 'Ariana Grande',
        'follower_count': 183,
        'description': 'Musician and actress',
        'country': 'United States'
    },
    {
        'name': 'Dwayne Johnson',
        'follower_count': 181,
        'description': 'Actor and professional wrestler',
        'country': 'United States'
    },
    {
        'name': 'Selena Gomez',
        'follower_count': 174,
        'description': 'Musician and actress',
        'country': 'United States'
    },
    {
        'name': 'Kylie Jenner',
        'follower_count': 172,
        'description': 'Reality TV personality and businesswoman and Self-Made Billionaire',
        'country': 'United States'
    },
    {
        'name': 'Kim Kardashian',
        'follower_count': 167,
        'description': 'Reality TV personality and businesswoman',
        'country': 'United States'
    },
    {
        'name': 'Lionel Messi',
        'follower_count': 149,
        'description': 'Footballer',
        'country': 'Argentina'
    },
    {
        'name': 'Beyoncé',
        'follower_count': 145,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'Neymar',
        'follower_count': 138,
        'description': 'Footballer',
        'country': 'Brasil'
    },
    {
        'name': 'National Geographic',
        'follower_count': 135,
        'description': 'Magazine',
        'country': 'United States'
    },
    {
        'name': 'Justin Bieber',
        'follower_count': 133,
        'description': 'Musician',
        'country': 'Canada'
    },
    {
        'name': 'Taylor Swift',
        'follower_count': 131,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'Kendall Jenner',
        'follower_count': 127,
        'description': 'Reality TV personality and Model',
        'country': 'United States'
    },
    {
        'name': 'Jennifer Lopez',
        'follower_count': 119,
        'description': 'Musician and actress',
        'country': 'United States'
    },
    {
        'name': 'Nicki Minaj',
        'follower_count': 113,
        'description': 'Musician',
        'country': 'Trinidad and Tobago'
    },
    {
        'name': 'Nike',
        'follower_count': 109,
        'description': 'Sportswear multinational',
        'country': 'United States'
    },
    {
        'name': 'Khloé Kardashian',
        'follower_count': 108,
        'description': 'Reality TV personality and businesswoman',
        'country': 'United States'
    },
    {
        'name': 'Miley Cyrus',
        'follower_count': 107,
        'description': 'Musician and actress',
        'country': 'United States'
    },
    {
        'name': 'Katy Perry',
        'follower_count': 94,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'Kourtney Kardashian',
        'follower_count': 90,
        'description': 'Reality TV personality',
        'country': 'United States'
    },
    {
        'name': 'Kevin Hart',
        'follower_count': 89,
        'description': 'Comedian and actor',
        'country': 'United States'
    },
    {
        'name': 'Ellen DeGeneres',
        'follower_count': 87,
        'description': 'Comedian',
        'country': 'United States'
    },
    {
        'name': 'Real Madrid CF',
        'follower_count': 86,
        'description': 'Football club',
        'country': 'Spain'
    },
    {
        'name': 'FC Barcelona',
        'follower_count': 85,
        'description': 'Football club',
        'country': 'Spain'
    },
    {
        'name': 'Rihanna',
        'follower_count': 81,
        'description': 'Musician and businesswoman',
        'country': 'Barbados'
    },
    {
        'name': 'Demi Lovato',
        'follower_count': 80,
        'description': 'Musician and actress',
        'country': 'United States'
    },
    {
        'name': "Victoria's Secret",
        'follower_count': 69,
        'description': 'Lingerie brand',
        'country': 'United States'
    },
    {
        'name': 'Zendaya',
        'follower_count': 68,
        'description': 'Actress and musician',
        'country': 'United States'
    },
    {
        'name': 'Shakira',
        'follower_count': 66,
        'description': 'Musician',
        'country': 'Colombia'
    },
    {
        'name': 'Drake',
        'follower_count': 65,
        'description': 'Musician',
        'country': 'Canada'
    },
    {
        'name': 'Chris Brown',
        'follower_count': 64,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'LeBron James',
        'follower_count': 63,
        'description': 'Basketball player',
        'country': 'United States'
    },
    {
        'name': 'Vin Diesel',
        'follower_count': 62,
        'description': 'Actor',
        'country': 'United States'
    },
    {
        'name': 'Cardi B',
        'follower_count': 67,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'David Beckham',
        'follower_count': 82,
        'description': 'Footballer',
        'country': 'United Kingdom'
    },
    {
        'name': 'Billie Eilish',
        'follower_count': 61,
        'description': 'Musician',
        'country': 'United States'
    },
    {
        'name': 'Justin Timberlake',
        'follower_count': 59,
        'description': 'Musician and actor',
        'country': 'United States'
    },
    {
        'name': 'UEFA Champions League',
        'follower_count': 58,
        'description': 'Club football competition',
        'country': 'Europe'
    },
    {
        'name': 'NASA',
        'follower_count': 56,
        'description': 'Space agency',
        'country': 'United States'
    },
    {
        'name': 'Emma Watson',
        'follower_count': 56,
        'description': 'Actress',
        'country': 'United Kingdom'
    },
    {
        'name': 'Shawn Mendes',
        'follower_count': 57,
        'description': 'Musician',
        'country': 'Canada'
    },
    {
        'name': 'Virat Kohli',
        'follower_count': 55,
        'description': 'Cricketer',
        'country': 'India'
    },
    {
        'name': 'Gigi Hadid',
        'follower_count': 54,
        'description': 'Model',
        'country': 'United States'
    },
    {
        'name': 'Priyanka Chopra Jonas',
        'follower_count': 53,
        'description': 'Actress and musician',
        'country': 'India'
    },
    {
        'name': '9GAG',
        'follower_count': 52,
        'description': 'Social media platform',
        'country': 'China'
    },
    {
        'name': 'Ronaldinho',
        'follower_count': 51,
        'description': 'Footballer',
        'country': 'Brasil'
    },
    {
        'name': 'Maluma',
        'follower_count': 50,
        'description': 'Musician',
        'country': 'Colombia'
    },
    {
        'name': 'Camila Cabello',
        'follower_count': 49,
        'description': 'Musician',
        'country': 'Cuba'
    },
    {
        'name': 'NBA',
        'follower_count': 47,
        'description': 'Club Basketball Competition',
        'country': 'United States'
    }
]

import random

def get_random_account():
  """Get data from random account"""
  return random.choice(data)

def format_data(account):
  """Format account into printable format: name, description and country"""
  name = account["name"]
  description = account["description"]
  country = account["country"]
  # print(f'{name}: {account["follower_count"]}')
  return f"{name}, a {description}, from {country}"

def check_answer(guess, a_followers, b_followers):
  """Checks followers against user's guess
  and returns True if they got it right.
  Or False if they got it wrong."""
  if a_followers > b_followers:
    return guess == "a"
  else:
    return guess == "b"


def game():
  score = 0
  game_should_continue = True
  account_a = get_random_account()
  account_b = get_random_account()

  while game_should_continue:
    account_a = account_b
    account_b = get_random_account()

    while account_a == account_b:
      account_b = get_random_account()

    print(f"Compare A: {format_data(account_a)}.")

    print(f"Against B: {format_data(account_b)}.")

    guess = input("Who has more followers? Type 'A' or 'B': ").lower()
    a_follower_count = account_a["follower_count"]
    b_follower_count = account_b["follower_count"]
    is_correct = check_answer(guess, a_follower_count, b_follower_count)


    if is_correct:
      score += 1
      print(f"You're right! Current score: {score}.")
    else:
      game_should_continue = False
      print(f"Sorry, that's wrong. Final score: {score}")

game()

"""##**Section:24 - File Handling**

###32.Problem
"""

file = open('/content/file.txt', 'r')


for each in file:
	print (each)

file = open("/content/file.txt", "r")
print (file.read())

with open("/content/file.txt") as file:
	data = file.read()

print(data)

file = open("/content/file.txt", "r")
print (file.read(5))

file = open('/content/file.txt','w')
file.write("This is the write command")
file.write("It allows us to write in a particular file")
file.close()

"""#**Date: 18oct.2023**

##**Section:26- List Comprehension**

###33.Problem

You are going to write a List Comprehension to create a new list called squared_numbers. This new list should contain every number in the list numbers but each number should be squared.

e.g.
4 * 4 = 16

4 squared equals 16.

DO NOT modify the List numbers directly. Try to use List Comprehension instead of a Loop.

Target Output

[1, 1, 4, 9, 25, 64, 169, 441, 1156, 3025]
"""

numbers = [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]

squared_numbers = [i * i for i in numbers]

print(squared_numbers)

"""###34.Problem

In this list comprehension exercise you will practice using list comprehension to filter out the even numbers from a series of numbers.

First, use list comprehension to convert the list_of_strings to a list of integers.

Then use list comprehension again to create a new list called result. This new list should only contain the even numbers from the list numbers.

Again, try to use Python's List Comprehension instead of a Loop.

**Example Input**

9, 0, 32, 8, 2, 8, 64, 29, 42, 99

**Example Output**

[0, 32, 8, 2, 8, 64, 42]
"""

list_of_strings = input().split(',')
# 🚨 Do  not change the code above

# TODO: Use list comprehension to convert the strings to integers 👇:
num = [int(x) for x in list_of_strings]

# TODO: Use list comprehension to filter out the odd numbers
# and store the even numbers in a list called "result"
result = [x for x in num if x%2==0]

# Write your code 👆 above:
print(result)

"""###35.Problem"""

with open("/content/file1.txt") as file1:
  list1 = file1.readlines()

with open("/content/file2.txt") as file2:
  list2 = file2.readlines()

result = [int(num) for num in list1 if num in list2]

# Your code above 👆
print(result)

"""###36.Problem

You are going to use Dictionary Comprehension to create a dictionary called result that takes each word in the given sentence and calculates the number of letters in each word.

Try Googling to find out how to convert a sentence into a list of words.

Do NOT Create a dictionary directly. Try to use Dictionary Comprehension instead of a Loop.

**Example Input**

What is the Airspeed Velocity of an Unladen Swallow?

**Example Output**

{
'What': 4,

'is': 2,

'the': 3,

'Airspeed': 8,

'Velocity': 8,

'of': 2,

'an': 2,

'Unladen': 7,

'Swallow?': 8

}
"""

sentence = input()

# Using dictionary comprehension
result = {word:len(word) for word in sentence.split()}

print(result)

"""###37.Problem"""

# eval() converts correctly formatted string to dict
weather_c = eval(input())

# dictionary comprehension
weather_f = {day:temp * 9/5 + 32 for (day, temp) in weather_c.items()}

print(weather_f)

"""##Section:27- *args & * *kwargs

###38.Problem
"""

def add(*args):
    # print(args[1])

    sum = 0
    for n in args:
        sum += n
    return sum
print(add(3, 5, 6, 2, 1, 7, 4, 3))

"""###39.Problem"""

def calculate(n, **kwargs):
    print(kwargs)

    n += kwargs["add"]
    n *= kwargs["multiply"]
    print(n)


calculate(2, add=3, multiply=5)